import java.io.*;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Scanner;
import java.util.concurrent.TimeUnit;

public class Main {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        System.out.print("(i) target ip address: ");
        String ip = scan.nextLine();
        System.out.print("(i) enter username: ");
        String un = scan.nextLine();
        connect(ip, un);
    }
    public static void connect(String ip, String un) {
        try {
            Socket client = new Socket(ip, 4444);
            System.out.println("(i) connected to (" + ip + ").");
            sendRead(client, un);
        } catch (IOException e) {server(ip, un);}
    }
    public static void server(String ip, String un) {
        try {
            System.out.println("(i) connection to (" + ip + ") has failed.");
            ServerSocket server = new ServerSocket(4444);
            System.out.println("(i) awaiting connection...");
            Socket client = server.accept();
            sendRead(client, un);
        } catch (IOException e) {System.out.println("(!!!) ioexception.");}
    }
    public static void sendRead(Socket client, String un) {
        System.out.println("(i) user successfully connected.");
        try {
            Scanner scan = new Scanner(System.in);
            DataInputStream in = new DataInputStream(client.getInputStream());
            DataOutputStream out = new DataOutputStream(client.getOutputStream());
            out.writeUTF(un);
            String user = in.readUTF();
            new Thread(() -> {
                while (true) {
                    try {
                        TimeUnit.SECONDS.sleep(1);
                        System.out.println(user + ": " + in.readUTF());
                    } catch (IOException | InterruptedException e) {
                        System.out.println("(i) other user disconnected. exiting program...");
                        System.exit(0);
                    }
                }
            }).start();
            new Thread(() -> {
                while (true) {
                    try {
                        TimeUnit.SECONDS.sleep(1);
                        String msg = scan.nextLine();
                        if (msg.equals("/quit")) {System.exit(0);} else {out.writeUTF(msg);}
                    } catch (IOException | InterruptedException e) {System.out.println("(!!!) ioexception.");}
                }
            }).start();
        } catch (IOException e) {System.out.println("(!!!) ioexception.");}
    }
}
